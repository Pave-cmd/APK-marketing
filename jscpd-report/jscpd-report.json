{
  "statistics": {
    "detectionDate": "2025-05-28T14:38:24.906Z",
    "formats": {
      "typescript": {
        "sources": {
          "src/utils/duplicateDetection/unusedCodeDetector.ts": {
            "lines": 625,
            "tokens": 4679,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/duplicateDetection/index.ts": {
            "lines": 95,
            "tokens": 724,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/duplicateDetection/fileSizeChecker.ts": {
            "lines": 230,
            "tokens": 1746,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/duplicateDetection/fileDetector.ts": {
            "lines": 161,
            "tokens": 1266,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/duplicateDetection/codeDetector.ts": {
            "lines": 134,
            "tokens": 982,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/urlUtils.ts": {
            "lines": 212,
            "tokens": 2002,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/singleton.ts": {
            "lines": 28,
            "tokens": 156,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/logger.ts": {
            "lines": 76,
            "tokens": 608,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/formatters.ts": {
            "lines": 19,
            "tokens": 168,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/errorHandler.ts": {
            "lines": 64,
            "tokens": 427,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/cookieUtils.ts": {
            "lines": 33,
            "tokens": 225,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/express.d.ts": {
            "lines": 15,
            "tokens": 104,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/websiteScraperService.ts": {
            "lines": 228,
            "tokens": 1761,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/webAnalysisService.ts": {
            "lines": 369,
            "tokens": 3201,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 348,
            "percentage": 7.59,
            "percentageTokens": 10.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/tokenManagerService.ts": {
            "lines": 710,
            "tokens": 5079,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 196,
            "percentage": 3.38,
            "percentageTokens": 3.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/socialPublisherService.ts": {
            "lines": 188,
            "tokens": 1427,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/socialContentGeneratorService.ts": {
            "lines": 261,
            "tokens": 2066,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/socialApiService.ts": {
            "lines": 786,
            "tokens": 5296,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 100,
            "duplicatedTokens": 690,
            "percentage": 12.72,
            "percentageTokens": 13.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/scheduledPostService.ts": {
            "lines": 660,
            "tokens": 5240,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 83,
            "percentage": 1.36,
            "percentageTokens": 1.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/cronService.ts": {
            "lines": 120,
            "tokens": 935,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/contentService.ts": {
            "lines": 311,
            "tokens": 2539,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 83,
            "percentage": 2.89,
            "percentageTokens": 3.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/contentGeneratorService.ts": {
            "lines": 934,
            "tokens": 6725,
            "sources": 1,
            "clones": 16,
            "duplicatedLines": 250,
            "duplicatedTokens": 2134,
            "percentage": 26.77,
            "percentageTokens": 31.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/routes/websiteRoutes.ts": {
            "lines": 87,
            "tokens": 777,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/routes/webAnalysisRoutes.ts": {
            "lines": 21,
            "tokens": 188,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/routes/socialNetworkRoutes.ts": {
            "lines": 28,
            "tokens": 224,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/routes/scheduledPostRoutes.ts": {
            "lines": 26,
            "tokens": 239,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/routes/legalRoutes.ts": {
            "lines": 31,
            "tokens": 235,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/routes/gdprRoutes.ts": {
            "lines": 30,
            "tokens": 153,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/routes/dashboardRoutes.ts": {
            "lines": 83,
            "tokens": 731,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/routes/contentRoutes.ts": {
            "lines": 75,
            "tokens": 426,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 27,
            "duplicatedTokens": 86,
            "percentage": 36,
            "percentageTokens": 20.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/routes/contentGeneratorRoutes.ts": {
            "lines": 29,
            "tokens": 128,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 27,
            "duplicatedTokens": 86,
            "percentage": 93.1,
            "percentageTokens": 67.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/routes/authRoutes.ts": {
            "lines": 43,
            "tokens": 440,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/routes/apiConfigRoutes.ts": {
            "lines": 21,
            "tokens": 195,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/models/WebAnalysis.ts": {
            "lines": 113,
            "tokens": 895,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/models/User.ts": {
            "lines": 343,
            "tokens": 2364,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/models/ScheduledPost.ts": {
            "lines": 148,
            "tokens": 1031,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/models/Content.ts": {
            "lines": 144,
            "tokens": 1095,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/models/ApiConfig.ts": {
            "lines": 327,
            "tokens": 2951,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/middleware/rateLimitMiddleware.ts": {
            "lines": 115,
            "tokens": 1049,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/middleware/httpsRedirect.ts": {
            "lines": 54,
            "tokens": 369,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/middleware/csrfMiddleware.ts": {
            "lines": 160,
            "tokens": 1189,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/middleware/consentMiddleware.ts": {
            "lines": 85,
            "tokens": 876,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 280,
            "percentage": 25.88,
            "percentageTokens": 31.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/middleware/authMiddleware.ts": {
            "lines": 281,
            "tokens": 2275,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/controllers/websiteController.ts": {
            "lines": 519,
            "tokens": 4242,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/controllers/webAnalysisController.ts": {
            "lines": 174,
            "tokens": 1434,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 196,
            "percentage": 12.64,
            "percentageTokens": 13.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/controllers/socialNetworkController.ts": {
            "lines": 667,
            "tokens": 5225,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 116,
            "duplicatedTokens": 898,
            "percentage": 17.39,
            "percentageTokens": 17.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/controllers/scheduledPostController.ts": {
            "lines": 297,
            "tokens": 2328,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/controllers/gdprController.ts": {
            "lines": 271,
            "tokens": 2751,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 48,
            "duplicatedTokens": 470,
            "percentage": 17.71,
            "percentageTokens": 17.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/controllers/emergencyController.ts": {
            "lines": 218,
            "tokens": 1601,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/controllers/contentGeneratorController.ts": {
            "lines": 196,
            "tokens": 1699,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/controllers/authController.ts": {
            "lines": 447,
            "tokens": 3408,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/controllers/apiConfigController.ts": {
            "lines": 195,
            "tokens": 1723,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/db.ts": {
            "lines": 57,
            "tokens": 451,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/config.ts": {
            "lines": 75,
            "tokens": 558,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/server.ts": {
            "lines": 553,
            "tokens": 4203,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/migrate-social-networks.ts": {
            "lines": 241,
            "tokens": 1701,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/check-duplicates.ts": {
            "lines": 59,
            "tokens": 473,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 12472,
          "tokens": 96983,
          "sources": 57,
          "clones": 22,
          "duplicatedLines": 341,
          "duplicatedTokens": 2775,
          "percentage": 2.73,
          "percentageTokens": 2.86,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "javascript": {
        "sources": {
          "src/public/js/website-analysis.js": {
            "lines": 213,
            "tokens": 1209,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/public/js/unified-website-manager.js": {
            "lines": 763,
            "tokens": 5528,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/public/js/socialni-site.js": {
            "lines": 226,
            "tokens": 1848,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/public/js/main.js": {
            "lines": 247,
            "tokens": 1610,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/public/js/gdpr.js": {
            "lines": 168,
            "tokens": 1355,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/public/js/dashboard.js": {
            "lines": 106,
            "tokens": 638,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/public/js/cookie-consent.js": {
            "lines": 319,
            "tokens": 1505,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/public/js/content.js": {
            "lines": 32,
            "tokens": 187,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/public/js/api-config.js": {
            "lines": 272,
            "tokens": 2154,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 108,
            "duplicatedTokens": 824,
            "percentage": 39.71,
            "percentageTokens": 38.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/heroku-start.js": {
            "lines": 49,
            "tokens": 460,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "scripts/build-debug.js": {
            "lines": 105,
            "tokens": 824,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "server.js": {
            "lines": 85,
            "tokens": 245,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "eslint.config.js": {
            "lines": 82,
            "tokens": 541,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 2667,
          "tokens": 18104,
          "sources": 13,
          "clones": 4,
          "duplicatedLines": 54,
          "duplicatedTokens": 412,
          "percentage": 2.02,
          "percentageTokens": 2.28,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "css": {
        "sources": {
          "src/public/css/style.css": {
            "lines": 383,
            "tokens": 1971,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/public/css/cookie-consent.css": {
            "lines": 258,
            "tokens": 1400,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 641,
          "tokens": 3371,
          "sources": 2,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 15780,
      "tokens": 118458,
      "sources": 72,
      "clones": 26,
      "duplicatedLines": 395,
      "duplicatedTokens": 3187,
      "percentage": 2.5,
      "percentageTokens": 2.69,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ", {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                credentials: 'same-origin',\n                body: JSON.stringify(data)\n            })\n            .then(response => response.json())\n            .then(result => {\n                console.log('[API-CONFIG] Save result:', result);\n                if (result.success) {\n                    alert('Konfigurace byla úspěšně uložena!');\n                    // Clear password field\n                    document.getElementById('tw-client-secret'",
      "tokens": 0,
      "firstFile": {
        "name": "src/public/js/api-config.js",
        "start": 176,
        "end": 190,
        "startLoc": {
          "line": 176,
          "column": 22,
          "position": 1380
        },
        "endLoc": {
          "line": 190,
          "column": 19,
          "position": 1492
        }
      },
      "secondFile": {
        "name": "src/public/js/api-config.js",
        "start": 135,
        "end": 149,
        "startLoc": {
          "line": 135,
          "column": 23,
          "position": 1048
        },
        "endLoc": {
          "line": 149,
          "column": 16,
          "position": 1160
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ").value = '';\n                    loadApiConfig(); // Reload configuration\n                } else {\n                    alert('Chyba: ' + result.message);\n                }\n            })\n            .catch(error => {\n                console.error('[API-CONFIG] Save error:', error);\n                alert('Chyba při ukládání: ' + error.message);\n            });\n        });\n    }\n\n    // LinkedIn form submit",
      "tokens": 0,
      "firstFile": {
        "name": "src/public/js/api-config.js",
        "start": 190,
        "end": 203,
        "startLoc": {
          "line": 190,
          "column": 19,
          "position": 1493
        },
        "endLoc": {
          "line": 203,
          "column": 24,
          "position": 1587
        }
      },
      "secondFile": {
        "name": "src/public/js/api-config.js",
        "start": 149,
        "end": 162,
        "startLoc": {
          "line": 149,
          "column": 16,
          "position": 1161
        },
        "endLoc": {
          "line": 162,
          "column": 23,
          "position": 1255
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ", {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                credentials: 'same-origin',\n                body: JSON.stringify(data)\n            })\n            .then(response => response.json())\n            .then(result => {\n                console.log('[API-CONFIG] Save result:', result);\n                if (result.success) {\n                    alert('Konfigurace byla úspěšně uložena!');\n                    // Clear password field\n                    document.getElementById('li-client-secret'",
      "tokens": 0,
      "firstFile": {
        "name": "src/public/js/api-config.js",
        "start": 217,
        "end": 231,
        "startLoc": {
          "line": 217,
          "column": 23,
          "position": 1712
        },
        "endLoc": {
          "line": 231,
          "column": 19,
          "position": 1824
        }
      },
      "secondFile": {
        "name": "src/public/js/api-config.js",
        "start": 135,
        "end": 149,
        "startLoc": {
          "line": 135,
          "column": 23,
          "position": 1048
        },
        "endLoc": {
          "line": 149,
          "column": 16,
          "position": 1160
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ").value = '';\n                    loadApiConfig(); // Reload configuration\n                } else {\n                    alert('Chyba: ' + result.message);\n                }\n            })\n            .catch(error => {\n                console.error('[API-CONFIG] Save error:', error);\n                alert('Chyba při ukládání: ' + error.message);\n            });\n        });\n    }\n\n    // Test configuration buttons",
      "tokens": 0,
      "firstFile": {
        "name": "src/public/js/api-config.js",
        "start": 231,
        "end": 244,
        "startLoc": {
          "line": 231,
          "column": 19,
          "position": 1825
        },
        "endLoc": {
          "line": 244,
          "column": 30,
          "position": 1919
        }
      },
      "secondFile": {
        "name": "src/public/js/api-config.js",
        "start": 149,
        "end": 162,
        "startLoc": {
          "line": 149,
          "column": 16,
          "position": 1161
        },
        "endLoc": {
          "line": 162,
          "column": 23,
          "position": 1255
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "analysis.generatedContent = {\n            facebook: {\n              text: `Podívejte se na ${websiteUrl}!`,\n              image: scrapedContent.images && scrapedContent.images.length > 0 ? scrapedContent.images[0] : undefined\n            },\n            twitter: {\n              text: `Zajímavý obsah na ${websiteUrl}`,\n              image: scrapedContent.images && scrapedContent.images.length > 0 ? scrapedContent.images[0] : undefined\n            },\n            linkedin: {\n              text: `Doporučujeme obsah na ${websiteUrl}`,\n              image: scrapedContent.images && scrapedContent.images.length > 0 ? scrapedContent.images[0] : undefined\n            }\n          };\n          await",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/webAnalysisService.ts",
        "start": 173,
        "end": 187,
        "startLoc": {
          "line": 173,
          "column": 11,
          "position": 1466
        },
        "endLoc": {
          "line": 187,
          "column": 6,
          "position": 1640
        }
      },
      "secondFile": {
        "name": "src/services/webAnalysisService.ts",
        "start": 101,
        "end": 116,
        "startLoc": {
          "line": 101,
          "column": 13,
          "position": 824
        },
        "endLoc": {
          "line": 116,
          "column": 21,
          "position": 1000
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ".save();\n      \n      // Aktualizace uživatelského profilu\n      const user = await User.findById(userId);\n      \n      if (!user) {\n        webLog('Uživatel nenalezen', { userId });\n        return false;\n      }\n      \n      // Najdeme záznam sociální sítě nebo vytvoříme nový\n      const existingNetwork = user.socialNetworks.find(\n        (net: any) => net.platform === 'linkedin'",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/tokenManagerService.ts",
        "start": 479,
        "end": 491,
        "startLoc": {
          "line": 479,
          "column": 15,
          "position": 3410
        },
        "endLoc": {
          "line": 491,
          "column": 11,
          "position": 3508
        }
      },
      "secondFile": {
        "name": "src/services/tokenManagerService.ts",
        "start": 288,
        "end": 300,
        "startLoc": {
          "line": 288,
          "column": 14,
          "position": 2071
        },
        "endLoc": {
          "line": 300,
          "column": 10,
          "position": 2169
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "// Vytvoření OAuth instance pro Twitter API\n      const oauth = new OAuth({\n        consumer: {\n          key: tokens.apiKey,\n          secret: tokens.apiSecret\n        },\n        signature_method: 'HMAC-SHA1',\n        hash_function(baseString, key) {\n          return crypto\n            .createHmac('sha1', key)\n            .update(baseString)\n            .digest('base64');\n        }\n      });\n      \n      // Upload API endpoint",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/socialApiService.ts",
        "start": 337,
        "end": 352,
        "startLoc": {
          "line": 337,
          "column": 7,
          "position": 2226
        },
        "endLoc": {
          "line": 352,
          "column": 23,
          "position": 2327
        }
      },
      "secondFile": {
        "name": "src/services/socialApiService.ts",
        "start": 260,
        "end": 275,
        "startLoc": {
          "line": 260,
          "column": 7,
          "position": 1691
        },
        "endLoc": {
          "line": 275,
          "column": 26,
          "position": 1791
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "const oauth = new OAuth({\n                consumer: {\n                  key: tokens.apiKey,\n                  secret: tokens.apiSecret\n                },\n                signature_method: 'HMAC-SHA1',\n                hash_function(baseString, key) {\n                  return crypto\n                    .createHmac('sha1', key)\n                    .update(baseString)\n                    .digest('base64');\n                }\n              });\n              \n              const",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/socialApiService.ts",
        "start": 456,
        "end": 470,
        "startLoc": {
          "line": 456,
          "column": 15,
          "position": 3148
        },
        "endLoc": {
          "line": 470,
          "column": 6,
          "position": 3246
        }
      },
      "secondFile": {
        "name": "src/services/socialApiService.ts",
        "start": 261,
        "end": 275,
        "startLoc": {
          "line": 261,
          "column": 7,
          "position": 1694
        },
        "endLoc": {
          "line": 275,
          "column": 26,
          "position": 1791
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "const tokens = await TokenManagerService.getTwitterTokens(userId);\n      \n      if (!tokens) {\n        throw new Error('Nenalezeny platné tokeny pro Twitter');\n      }\n      \n      // Vytvoření OAuth instance pro Twitter API\n      const oauth = new OAuth({\n        consumer: {\n          key: tokens.apiKey,\n          secret: tokens.apiSecret\n        },\n        signature_method: 'HMAC-SHA1',\n        hash_function(baseString, key) {\n          return crypto\n            .createHmac('sha1', key)\n            .update(baseString)\n            .digest('base64');\n        }\n      });\n      \n      // Endpoint pro získání analytiky uživatele",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/socialApiService.ts",
        "start": 505,
        "end": 526,
        "startLoc": {
          "line": 505,
          "column": 7,
          "position": 3456
        },
        "endLoc": {
          "line": 526,
          "column": 44,
          "position": 3602
        }
      },
      "secondFile": {
        "name": "src/services/socialApiService.ts",
        "start": 254,
        "end": 275,
        "startLoc": {
          "line": 254,
          "column": 7,
          "position": 1647
        },
        "endLoc": {
          "line": 275,
          "column": 26,
          "position": 1791
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "[]> {\n    try {\n      const query: any = { userId: new mongoose.Types.ObjectId(userId) };\n\n      if (filters?.status) {\n        query.status = filters.status;\n      }\n\n      if (filters?.platform) {\n        query[",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/contentService.ts",
        "start": 79,
        "end": 88,
        "startLoc": {
          "line": 79,
          "column": 9,
          "position": 610
        },
        "endLoc": {
          "line": 88,
          "column": 2,
          "position": 693
        }
      },
      "secondFile": {
        "name": "src/services/scheduledPostService.ts",
        "start": 129,
        "end": 138,
        "startLoc": {
          "line": 129,
          "column": 15,
          "position": 972
        },
        "endLoc": {
          "line": 138,
          "column": 2,
          "position": 1055
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n    websiteName: string,\n    language: string,\n    platform: 'facebook' | 'twitter' | 'instagram' | 'linkedin',\n    tone: ToneSettings\n  ): Promise<SocialMediaPost> {\n    // Příprava systémové zprávy podle tónu\n    const systemMessage = this.getSystemMessageForTone(tone, platform, language);\n    \n    // Omezení délky obsahu podle platformy\n    const maxLength = this.getMaxLengthForPlatform(platform);\n    \n    // Vytvoření zprávy pro generování\n    const contentPrompt = `\n      Vygeneruj příspěvek o článku \"",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/contentGeneratorService.ts",
        "start": 436,
        "end": 450,
        "startLoc": {
          "line": 436,
          "column": 9,
          "position": 3196
        },
        "endLoc": {
          "line": 450,
          "column": 37,
          "position": 3304
        }
      },
      "secondFile": {
        "name": "src/services/contentGeneratorService.ts",
        "start": 275,
        "end": 289,
        "startLoc": {
          "line": 275,
          "column": 8,
          "position": 1978
        },
        "endLoc": {
          "line": 289,
          "column": 39,
          "position": 2086
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ".url}\n      \n      Požadavky na příspěvek:\n      - Maximální délka: ${maxLength} znaků\n      - Jazyk: ${language === 'cs' ? 'Čeština' : 'Angličtina'}\n      ${tone.callToAction ? '- Zahrnout výzvu k akci na konci' : ''}\n      ${platform === 'instagram' ? '- Vhodný pro Instagram - kreativní a vizuálně popisný' : ''}\n      ${platform === 'twitter' ? '- Stručný a výstižný, vhodný pro Twitter' : ''}\n      ${platform === 'linkedin' ? '- Profesionální tón vhodný pro LinkedIn' : ''}\n      ${platform === 'facebook' ? '- Konverzační styl vhodný pro Facebook' : ''}\n      \n      Uveďte pouze text příspěvku, bez dodatečných informací.\n    `;\n    \n    // Generování příspěvku\n    const generatedContent = await this.callOpenAI(systemMessage, contentPrompt);\n    \n    // Generování hashtagu\n    const hashtagPrompt = `\n      Vygeneruj ${tone.hashtags === 'many' ? '5-8' : tone.hashtags === 'moderate' ? '3-5' : tone.hashtags === 'minimal' ? '1-3' : '0'} \n      hashtagů pro příspěvek o článku \"",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/contentGeneratorService.ts",
        "start": 461,
        "end": 481,
        "startLoc": {
          "line": 461,
          "column": 9,
          "position": 3404
        },
        "endLoc": {
          "line": 481,
          "column": 40,
          "position": 3580
        }
      },
      "secondFile": {
        "name": "src/services/contentGeneratorService.ts",
        "start": 301,
        "end": 321,
        "startLoc": {
          "line": 301,
          "column": 8,
          "position": 2180
        },
        "endLoc": {
          "line": 321,
          "column": 42,
          "position": 2356
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "${language === 'cs' ? 'Čeština' : 'Angličtina'}\n      \n      Vrať pouze seznam hashtagů oddělených čárkami, bez # symbolu.\n    `;\n    \n    let hashtags: string[] = [];\n    \n    if (tone.hashtags !== 'none') {\n      const hashtagsResponse = await this.callOpenAI('You are a helpful assistant that generates relevant hashtags.', hashtagPrompt);\n      hashtags = hashtagsResponse.split(',').map(tag => tag.trim());\n    }\n    \n    // Generování obrazového promptu\n    const imagePromptText = `\n      Vygeneruj popis pro obrázek k článku \"",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/contentGeneratorService.ts",
        "start": 484,
        "end": 498,
        "startLoc": {
          "line": 484,
          "column": 14,
          "position": 3587
        },
        "endLoc": {
          "line": 498,
          "column": 45,
          "position": 3700
        }
      },
      "secondFile": {
        "name": "src/services/contentGeneratorService.ts",
        "start": 324,
        "end": 338,
        "startLoc": {
          "line": 324,
          "column": 14,
          "position": 2372
        },
        "endLoc": {
          "line": 338,
          "column": 45,
          "position": 2485
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ": string,\n    language: string,\n    platform: 'facebook' | 'twitter' | 'instagram' | 'linkedin',\n    tone: ToneSettings\n  ): Promise<SocialMediaPost> {\n    // Příprava systémové zprávy podle tónu\n    const systemMessage = this.getSystemMessageForTone(tone, platform, language);\n    \n    // Omezení délky obsahu podle platformy\n    const maxLength = this.getMaxLengthForPlatform(platform);\n    \n    // Vytvoření zprávy pro generování\n    const contentPrompt = `\n      Vygeneruj příspěvek o sekci \"",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/contentGeneratorService.ts",
        "start": 600,
        "end": 613,
        "startLoc": {
          "line": 600,
          "column": 11,
          "position": 4354
        },
        "endLoc": {
          "line": 613,
          "column": 36,
          "position": 4458
        }
      },
      "secondFile": {
        "name": "src/services/contentGeneratorService.ts",
        "start": 276,
        "end": 289,
        "startLoc": {
          "line": 276,
          "column": 12,
          "position": 1982
        },
        "endLoc": {
          "line": 289,
          "column": 39,
          "position": 2086
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "}\n      \n      Požadavky na příspěvek:\n      - Maximální délka: ${maxLength} znaků\n      - Jazyk: ${language === 'cs' ? 'Čeština' : 'Angličtina'}\n      ${tone.callToAction ? '- Zahrnout výzvu k akci na konci' : ''}\n      ${platform === 'instagram' ? '- Vhodný pro Instagram - kreativní a vizuálně popisný' : ''}\n      ${platform === 'twitter' ? '- Stručný a výstižný, vhodný pro Twitter' : ''}\n      ${platform === 'linkedin' ? '- Profesionální tón vhodný pro LinkedIn' : ''}\n      ${platform === 'facebook' ? '- Konverzační styl vhodný pro Facebook' : ''}\n      \n      Uveďte pouze text příspěvku, bez dodatečných informací.\n    `;\n    \n    // Generování příspěvku\n    const generatedContent = await this.callOpenAI(systemMessage, contentPrompt);\n    \n    // Generování hashtagu\n    const hashtagPrompt = `\n      Vygeneruj ${tone.hashtags === 'many' ? '5-8' : tone.hashtags === 'moderate' ? '3-5' : tone.hashtags === 'minimal' ? '1-3' : '0'} \n      hashtagů pro příspěvek o sekci \"",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/contentGeneratorService.ts",
        "start": 621,
        "end": 641,
        "startLoc": {
          "line": 621,
          "column": 11,
          "position": 4510
        },
        "endLoc": {
          "line": 641,
          "column": 39,
          "position": 4684
        }
      },
      "secondFile": {
        "name": "src/services/contentGeneratorService.ts",
        "start": 301,
        "end": 321,
        "startLoc": {
          "line": 301,
          "column": 4,
          "position": 2182
        },
        "endLoc": {
          "line": 321,
          "column": 42,
          "position": 2356
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "${language === 'cs' ? 'Čeština' : 'Angličtina'}\n      \n      Vrať pouze seznam hashtagů oddělených čárkami, bez # symbolu.\n    `;\n    \n    let hashtags: string[] = [];\n    \n    if (tone.hashtags !== 'none') {\n      const hashtagsResponse = await this.callOpenAI('You are a helpful assistant that generates relevant hashtags.', hashtagPrompt);\n      hashtags = hashtagsResponse.split(',').map(tag => tag.trim());\n    }\n    \n    // Generování obrazového promptu\n    const imagePromptText = `\n      Vygeneruj popis pro obrázek k sekci \"",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/contentGeneratorService.ts",
        "start": 644,
        "end": 658,
        "startLoc": {
          "line": 644,
          "column": 14,
          "position": 4695
        },
        "endLoc": {
          "line": 658,
          "column": 44,
          "position": 4808
        }
      },
      "secondFile": {
        "name": "src/services/contentGeneratorService.ts",
        "start": 324,
        "end": 338,
        "startLoc": {
          "line": 324,
          "column": 14,
          "position": 2372
        },
        "endLoc": {
          "line": 338,
          "column": 45,
          "position": 2485
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "language === 'cs' ? 'Čeština' : 'Angličtina'}\n      ${tone.callToAction ? '- Zahrnout výzvu k akci na konci' : ''}\n      ${platform === 'instagram' ? '- Vhodný pro Instagram - kreativní a vizuálně popisný' : ''}\n      ${platform === 'twitter' ? '- Stručný a výstižný, vhodný pro Twitter' : ''}\n      ${platform === 'linkedin' ? '- Profesionální tón vhodný pro LinkedIn' : ''}\n      ${platform === 'facebook' ? '- Konverzační styl vhodný pro Facebook' : ''}\n      \n      Uveďte pouze text příspěvku, bez dodatečných informací.\n    `;\n    \n    // Generování příspěvku\n    const generatedContent = await this.callOpenAI(systemMessage, contentPrompt);\n    \n    // Generování hashtagu\n    const hashtagPrompt = `\n      Vygeneruj ${tone.hashtags === 'many' ? '5-8' : tone.hashtags === 'moderate' ? '3-5' : tone.hashtags === 'minimal' ? '1-3' : '0'} \n      hashtagů pro příspěvek o webu ",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/contentGeneratorService.ts",
        "start": 713,
        "end": 729,
        "startLoc": {
          "line": 713,
          "column": 2,
          "position": 5113
        },
        "endLoc": {
          "line": 729,
          "column": 37,
          "position": 5280
        }
      },
      "secondFile": {
        "name": "src/services/contentGeneratorService.ts",
        "start": 305,
        "end": 321,
        "startLoc": {
          "line": 305,
          "column": 3,
          "position": 2189
        },
        "endLoc": {
          "line": 321,
          "column": 42,
          "position": 2356
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "language === 'cs' ? 'Čeština' : 'Angličtina'}\n      \n      Vrať pouze seznam hashtagů oddělených čárkami, bez # symbolu.\n    `;\n    \n    let hashtags: string[] = [];\n    \n    if (tone.hashtags !== 'none') {\n      const hashtagsResponse = await this.callOpenAI('You are a helpful assistant that generates relevant hashtags.', hashtagPrompt);\n      hashtags = hashtagsResponse.split(',').map(tag => tag.trim());\n    }\n    \n    // Generování obrazového promptu\n    const imagePromptText = `\n      Vygeneruj popis pro obrázek k webu ",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/contentGeneratorService.ts",
        "start": 732,
        "end": 746,
        "startLoc": {
          "line": 732,
          "column": 2,
          "position": 5296
        },
        "endLoc": {
          "line": 746,
          "column": 42,
          "position": 5408
        }
      },
      "secondFile": {
        "name": "src/services/contentGeneratorService.ts",
        "start": 324,
        "end": 338,
        "startLoc": {
          "line": 324,
          "column": 3,
          "position": 2373
        },
        "endLoc": {
          "line": 338,
          "column": 45,
          "position": 2485
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ";\n\nconst router = Router();\nconst contentGeneratorController = new ContentGeneratorController();\n\n/**\n * @route POST /api/content/generate\n * @desc Generate social media content for a website\n * @access Private\n */\nrouter.post(\n  '/generate',\n  requireAuth,\n  contentGeneratorController.generateSocialContent.bind(contentGeneratorController)\n);\n\n/**\n * @route POST /api/content/generate-variations\n * @desc Generate multiple content variations\n * @access Private\n */\nrouter.post(\n  '/generate-variations',\n  requireAuth,\n  contentGeneratorController.generateContentVariations.bind(contentGeneratorController)\n);\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "src/routes/contentGeneratorRoutes.ts",
        "start": 3,
        "end": 30,
        "startLoc": {
          "line": 3,
          "column": 31,
          "position": 37
        },
        "endLoc": {
          "line": 30,
          "column": 7,
          "position": 123
        }
      },
      "secondFile": {
        "name": "src/routes/contentRoutes.ts",
        "start": 4,
        "end": 35,
        "startLoc": {
          "line": 4,
          "column": 20,
          "position": 46
        },
        "endLoc": {
          "line": 35,
          "column": 4,
          "position": 132
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "= async (req: AuthRequest, res: Response, next: NextFunction) => {\n  try {\n    if (!req.userId) {\n      return res.status(401).json({ success: false, error: 'Neautorizovaný přístup' });\n    }\n\n    const user = await User.findById(req.userId);\n    if (!user) {\n      return res.status(404).json({ success: false, error: 'Uživatel nenalezen' });\n    }\n\n    // Kontrola souhlasu s konkrétním typem zpracování",
      "tokens": 0,
      "firstFile": {
        "name": "src/middleware/consentMiddleware.ts",
        "start": 40,
        "end": 51,
        "startLoc": {
          "line": 40,
          "column": 2,
          "position": 413
        },
        "endLoc": {
          "line": 51,
          "column": 51,
          "position": 553
        }
      },
      "secondFile": {
        "name": "src/middleware/consentMiddleware.ts",
        "start": 6,
        "end": 17,
        "startLoc": {
          "line": 6,
          "column": 2,
          "position": 47
        },
        "endLoc": {
          "line": 17,
          "column": 41,
          "position": 187
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "= async (req: Request, res: Response) => {\n  try {\n    const userId = req.user?.id || req.user?._id;\n\n    if (!userId) {\n      return res.status(401).json({\n        success: false,\n        message: 'Pro tuto akci je nutné být přihlášen'\n      });\n    }\n\n    logger",
      "tokens": 0,
      "firstFile": {
        "name": "src/controllers/webAnalysisController.ts",
        "start": 125,
        "end": 136,
        "startLoc": {
          "line": 125,
          "column": 2,
          "position": 951
        },
        "endLoc": {
          "line": 136,
          "column": 7,
          "position": 1049
        }
      },
      "secondFile": {
        "name": "src/controllers/webAnalysisController.ts",
        "start": 94,
        "end": 105,
        "startLoc": {
          "line": 94,
          "column": 2,
          "position": 711
        },
        "endLoc": {
          "line": 105,
          "column": 6,
          "position": 809
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "= async (req: Request, res: Response) => {\n  try {\n    const { networkId } = req.params;\n    const userId = req.user?._id;\n\n    if (!userId) {\n      return res.status(401).json({\n        success: false,\n        message: 'User not authenticated'\n      });\n    }\n\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "src/controllers/socialNetworkController.ts",
        "start": 153,
        "end": 165,
        "startLoc": {
          "line": 153,
          "column": 2,
          "position": 1211
        },
        "endLoc": {
          "line": 165,
          "column": 6,
          "position": 1316
        }
      },
      "secondFile": {
        "name": "src/controllers/socialNetworkController.ts",
        "start": 76,
        "end": 88,
        "startLoc": {
          "line": 76,
          "column": 2,
          "position": 608
        },
        "endLoc": {
          "line": 88,
          "column": 7,
          "position": 713
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "const userId = req.user?._id;\n\n    if (!userId) {\n      return res.status(401).json({\n        success: false,\n        message: 'User not authenticated'\n      });\n    }\n\n    const user = await User.findById(userId);\n    if (!user) {\n      return res.status(404).json({\n        success: false,\n        message: 'User not found'\n      });\n    }\n\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "src/controllers/socialNetworkController.ts",
        "start": 156,
        "end": 173,
        "startLoc": {
          "line": 156,
          "column": 5,
          "position": 1254
        },
        "endLoc": {
          "line": 173,
          "column": 6,
          "position": 1379
        }
      },
      "secondFile": {
        "name": "src/controllers/socialNetworkController.ts",
        "start": 123,
        "end": 140,
        "startLoc": {
          "line": 123,
          "column": 5,
          "position": 991
        },
        "endLoc": {
          "line": 140,
          "column": 4,
          "position": 1117
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": ";\n    const userId = req.user?._id;\n\n    if (!userId) {\n      return res.status(401).json({\n        success: false,\n        message: 'User not authenticated'\n      });\n    }\n    \n    const user = await User.findById(userId);\n    if (!user) {\n      return res.status(404).json({\n        success: false,\n        message: 'User not found'\n      });\n    }\n    \n    const network = user.socialNetworks.find(\n      (net: any) => net._id.toString() === networkId\n    );\n    \n    if (!network) {\n      return res.status(404).json({\n        success: false,\n        message: 'Social network not found'\n      });\n    }\n    \n    // Validace stavu sítě",
      "tokens": 0,
      "firstFile": {
        "name": "src/controllers/socialNetworkController.ts",
        "start": 461,
        "end": 490,
        "startLoc": {
          "line": 461,
          "column": 5,
          "position": 3786
        },
        "endLoc": {
          "line": 490,
          "column": 23,
          "position": 4005
        }
      },
      "secondFile": {
        "name": "src/controllers/socialNetworkController.ts",
        "start": 155,
        "end": 184,
        "startLoc": {
          "line": 155,
          "column": 7,
          "position": 1251
        },
        "endLoc": {
          "line": 184,
          "column": 32,
          "position": 1466
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "});\n      return;\n    }\n\n    const user = await User.findById(req.userId);\n    if (!user) {\n      res.status(404).json({ success: false, error: 'Uživatel nenalezen' });\n      return;\n    }\n\n    // Ověření hesla\n    const isPasswordValid = await user.comparePassword(password);\n    if (!isPasswordValid) {\n      res.status(401).json({ success: false, error: 'Nesprávné heslo' });\n      return;\n    }\n\n    // Smazání všech souvisejících dat",
      "tokens": 0,
      "firstFile": {
        "name": "src/controllers/gdprController.ts",
        "start": 197,
        "end": 214,
        "startLoc": {
          "line": 197,
          "column": 2,
          "position": 2053
        },
        "endLoc": {
          "line": 214,
          "column": 35,
          "position": 2195
        }
      },
      "secondFile": {
        "name": "src/controllers/gdprController.ts",
        "start": 152,
        "end": 169,
        "startLoc": {
          "line": 152,
          "column": 2,
          "position": 1603
        },
        "endLoc": {
          "line": 169,
          "column": 33,
          "position": 1745
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "= async (req: AuthRequest, res: Response) => {\n  try {\n    if (!req.userId) {\n      res.status(401).json({ success: false, error: 'Neautorizovaný přístup' });\n      return;\n    }\n\n    const user = await User.findById(req.userId).select('gdprConsent dataProcessingConsent consentGiven consentDate dataExportRequest dataDeletionRequest'",
      "tokens": 0,
      "firstFile": {
        "name": "src/controllers/gdprController.ts",
        "start": 238,
        "end": 245,
        "startLoc": {
          "line": 238,
          "column": 2,
          "position": 2404
        },
        "endLoc": {
          "line": 245,
          "column": 99,
          "position": 2497
        }
      },
      "secondFile": {
        "name": "src/controllers/gdprController.ts",
        "start": 50,
        "end": 57,
        "startLoc": {
          "line": 50,
          "column": 2,
          "position": 446
        },
        "endLoc": {
          "line": 57,
          "column": 12,
          "position": 539
        }
      }
    }
  ]
}